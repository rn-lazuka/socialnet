{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Dialog/Dialog.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hok/withAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Dialog","props","className","s","dialog","to","id","name","Message","message","maxLength100","maxlength","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","dialogsElements","dialogs","map","d","messagesElements","messages","m","dialogsItems","values","addDialogPost","newMessageBody","mapStateToPropsForRedirect","state","isAuth","auth","compose","connect","dialogsPage","newMessageText","dispatch","addDialogPostActionCreator","Component","RedirectComponent","this","React"],"mappings":"qFACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,+FCYpMC,EARA,SAACC,GACZ,OACI,yBAAKC,UAAWC,IAAEC,QACd,kBAAC,IAAD,CAASC,GAAI,YAAcJ,EAAMK,IAAKL,EAAMM,QCEzCC,EANC,SAACP,GACb,OACI,yBAAKC,UAAWC,IAAEM,SAAlB,IAA6BR,EAAMQ,U,iCCArCC,EAAeC,YAAU,KAehBC,cAAU,CAACC,KAAM,wBAAjBD,EAdQ,SAACX,GACpB,OAAO,0BAAMa,SAAUb,EAAMc,cACzB,6BACI,kBAACC,EAAA,EAAD,CAAOT,KAAM,iBACNU,UAAWC,IACXC,YAAa,kBACbC,SAAU,CAACC,IAAUX,MAEhC,6BACI,iDCeGY,EAzBC,SAACrB,GACb,IAAIsB,EAAkBtB,EAAMuB,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAQnB,KAAMmB,EAAEnB,KAAMD,GAAIoB,EAAEpB,QACrEqB,EAAmB1B,EAAM2B,SAASH,KAAI,SAAAI,GAAC,OAAI,kBAAC,EAAD,CAASpB,QAASoB,EAAEpB,QAASH,GAAIuB,EAAEvB,QAOlF,OAEI,yBAAKJ,UAAWC,IAAEqB,SACd,yBAAKtB,UAAWC,IAAE2B,cACbP,GAEL,yBAAKrB,UAAWC,IAAEyB,UACd,iCAAOD,GACP,kBAAC,EAAD,CAAgBb,SAbR,SAACiB,GACjB9B,EAAM+B,cAAcD,EAAOE,sB,wDCP/BC,EAA6B,SAACC,GAAD,MAAY,CAACC,OAAQD,EAAME,KAAKD,S,OCmBlDE,sBACXC,aAjBiB,SAACJ,GAClB,MAAO,CACHX,QAASW,EAAMK,YAAYhB,QAC3BI,SAAUO,EAAMK,YAAYZ,SAC5Ba,eAAgBN,EAAMK,YAAYC,mBAGlB,SAACC,GACrB,MAAM,CACFV,cAAc,SAACvB,GACXiC,EAASC,YAA2BlC,UDXhB,SAACmC,GAAe,IAEtCC,EAFqC,iLAInC,OAAKC,KAAK7C,MAAMmC,OACT,kBAACQ,EAAcE,KAAK7C,OADI,kBAAC,IAAD,CAAUI,GAAI,eAJV,GAEX0C,IAAMH,WAStC,OAFiCL,YAASL,EAATK,CAAqCM,KCQ3DP,CAGbhB","file":"static/js/4.726c9c4b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__MfkuR\",\"dialog\":\"Dialogs_dialog__v6SFX\",\"dialogsItems\":\"Dialogs_dialogsItems__1gMhv\",\"active\":\"Dialogs_active__LeEs-\",\"messages\":\"Dialogs_messages__3j2zy\",\"message\":\"Dialogs_message__24IIs\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Dialog = (props) => {\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink to={'/dialogs/' + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialog;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}> {props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import {Field, reduxForm} from \"redux-form\";\r\nimport React from 'react'\r\nimport {maxlength, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\n\r\nconst maxLength100 = maxlength(100);\r\nconst AddMessageForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name={\"newMessageBody\"}\r\n                   component={Textarea}\r\n                   placeholder={\"Enter your text\"}\r\n                   validate={[required, maxLength100]}/>\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>\r\n};\r\n\r\nexport default reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm);","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport Message from \"./Message/Message\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogsElements = props.dialogs.map(d => <Dialog name={d.name} id={d.id}/>);\r\n    let messagesElements = props.messages.map(m => <Message message={m.message} id={m.id}/>);\r\n\r\n    let addDialogPost = (values) => {\r\n        props.addDialogPost(values.newMessageBody)\r\n    };\r\n\r\n\r\n    return (\r\n\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div> {messagesElements}</div>\r\n                <AddMessageForm onSubmit={addDialogPost}/>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default Dialogs;","import React from 'react'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({isAuth: state.auth.isAuth});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    };\r\n\r\n    let ConnectedRedirectComponent = connect (mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedRedirectComponent;\r\n};","import {addDialogPostActionCreator} from \"../../Redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hok/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps =(state)=>{\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages,\r\n        newMessageText: state.dialogsPage.newMessageText,\r\n    }\r\n};\r\nlet mapDispatchToProps =(dispatch)=>{\r\n    return{\r\n        addDialogPost:(message)=>{\r\n            dispatch(addDialogPostActionCreator(message));\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport default compose (\r\n    connect (mapStateToProps,mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)\r\n"],"sourceRoot":""}