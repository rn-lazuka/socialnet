{"version":3,"sources":["components/Navbar/Navbar.module.css","Redux/dialogs-reducer.js","utils/objects-helpers.js","Redux/users-reducer.js","api/api.js","components/Sidebar/Friends/Friend.module.css","components/News/News.module.css","components/Music/Music.module.css","components/Settings/Settings.module.css","components/Profile/Profile.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","assets/images/loading.svg","components/Profile/MyPosts/Post/Post.module.css","components/common/FormsControls/FormsControls.jsx","serviceWorker.js","Redux/profile-reducer.js","Redux/sidebar-reducer.js","Redux/auth-reducer.js","Redux/app-reducer.js","Redux/redux-store.js","components/Sidebar/Friends/Friend.jsx","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Sidebar/Sidebar.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","App.js","index.js","utils/validators/validators.js","components/common/Preloader/Preloader.jsx","components/common/FormsControls/FormsControls.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css"],"names":["module","exports","initialState","dialogs","name","id","messages","message","addDialogPostActionCreator","type","dialogsReducer","state","action","newPost","newMessageText","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","curPortionNumber","followSuccess","userId","unfollowSuccess","toggleIsFetching","toggleIsFollowingProgress","requestUsers","dispatch","a","p","UsersAPI","getUsers","response","data","totalCount","getPagePortion","setCurrentPagePortion","followUnfollowFlow","apiMethod","actionCreator","resultCode","follow","onFollowClick","bind","unfollow","onUnFollowClick","usersReducer","followed","filter","instance","axios","withCredentials","baseURL","headers","get","post","delete","AuthAPI","authMe","login","email","password","rememberMe","logout","ProfileAPI","getProfile","getStatus","updateStatus","status","put","FormControl","meta","touched","error","children","hasError","className","s","formControl","Textarea","props","input","restProps","child","Input","createField","placeholder","validators","component","text","validate","Boolean","window","location","hostname","match","posts","likeCount","profile","setUserStatus","profileReducer","newPostText","postId","sidebarReducer","SET_USER_DATA","isAuth","setAuthUserData","getAuthUserData","authReducer","initialized","appReducer","reducers","combineReducers","profilePage","dialogsPage","sidebar","usersPage","auth","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","ThunkMiddleWare","Friend","friend","alt","src","Navbar","nav","item","to","activeClassName","activeLink","News","container","Music","Settings","Friends","friendItem","ProfileStatusWithHooks","useState","editMode","setEditMode","setStatus","useEffect","onChange","e","currentTarget","value","onBlur","updateUserStatus","autoFocus","onDoubleClick","ProfileInfo","descriptionBlock","photos","large","fullName","aboutMe","href","contacts","vk","Preloader","Post","MyPosts","React","memo","postsElements","reverse","postBlock","AddProfilePostFormRedux","onSubmit","values","addPost","maxLength200","maxlength","reduxForm","handleSubmit","Field","required","MyPostsContainer","connect","addPostActionCreator","Profile","content","ProfileContainer","this","params","authorizedUserId","history","push","getUserProfile","getUserStatus","prevProps","prevState","setState","Component","withRouter","Header","header","loginBlock","onClick","HeaderContainer","maxLength","LoginReduxForm","formSummaryError","length","stopSubmit","_error","formData","UsersContainer","lazy","Dialogs","App","initializeApp","Suspense","fallback","path","render","Login","promise","Promise","all","then","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","loading"],"mappings":"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","file":"static/js/main.1cbf6cc1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__7BaTQ\",\"item\":\"Navbar_item__5Q1ah\",\"activeLink\":\"Navbar_activeLink__23Iqh\",\"sidebar\":\"Navbar_sidebar__35kzO\"};","const ADD_DIALOG_POST = 'ADD-DIALOG-POST';\r\n\r\nlet initialState= { dialogs: [\r\n        {name: 'Sasha', id: 1},\r\n        {name: 'Pasha', id: 2},\r\n        {name: 'Dasha', id: 3},\r\n        {name: 'Masha', id: 4},\r\n        {name: 'Glasha', id: 5},\r\n        {name: 'Dimych', id: 6}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your way to samurai?'},\r\n        {id: 3, message: 'great work'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'YOOOO'},\r\n        {id: 6, message: 'WAZZZZUUUP'}\r\n    ],\r\n\r\n}\r\nconst dialogsReducer = (state= initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_DIALOG_POST: {\r\n            let newPost = {\r\n                id: 7,\r\n                message: action.message,\r\n            };\r\n          return  {...state,messages:[...state.messages,newPost],newMessageText:''}\r\n        }\r\n        default: return state\r\n    }\r\n};\r\nexport const addDialogPostActionCreator = (message) => ({type: ADD_DIALOG_POST,message});\r\n\r\nexport default dialogsReducer;","\r\nexport const updateObjectInArray =(items,itemId,objPropName,newObjProps)=>{\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n};","import {UsersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/objects-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\nconst SET_PORTION_PAGE = 'SET_PORTION_PAGE';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 50,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [],\r\n    curPortionNumber:1\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                    users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n                // users: state.users.map(u => {\r\n                //     if (u.id === action.userId) {\r\n                //         return {...u, followed: true}\r\n                //     }\r\n                //     return u;\r\n                // })\r\n            };\r\n        case\r\n        UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n                // users: state.users.map(u => {\r\n                //     if (u.id === action.userId) {\r\n                //         return {...u, followed: false}\r\n                //     }\r\n                //     return u;\r\n                // })\r\n            };\r\n        case\r\n        SET_USERS:\r\n            return {...state, users: action.users};\r\n        case\r\n        SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.p};\r\n        case\r\n        SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUsersCount: action.totalCount};\r\n        case\r\n        TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching};\r\n        case\r\n        TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId] :\r\n                    state.followingInProgress.filter(id => id !== action.userId)\r\n            };\r\n        }\r\n        case\r\n        SET_PORTION_PAGE:\r\n            return {...state, curPortionNumber: action.curPortionNumber};\r\n        default:\r\n            return state;\r\n\r\n    }\r\n};\r\n\r\n\r\nexport const setCurrentPage = (p) => ({type: SET_CURRENT_PAGE, p});\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setTotalUsersCount = (totalCount) => ({type: SET_TOTAL_USERS_COUNT, totalCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const setCurrentPagePortion = (curPortionNumber) => ({type: SET_PORTION_PAGE, curPortionNumber});\r\nexport const toggleIsFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\nexport const requestUsers = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(currentPage));\r\n        let response = await UsersAPI.getUsers(currentPage, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(response.data.items));\r\n        dispatch(setTotalUsersCount(response.data.totalCount));\r\n    }\r\n};\r\nexport const getPagePortion = (curPortionNumber) => {\r\n    return (dispatch) => {\r\n        dispatch(setCurrentPagePortion(curPortionNumber));\r\n    }\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch, id, apiMethod, actionCreator) => {\r\n    dispatch(toggleIsFollowingProgress(true, id));\r\n    let response = await apiMethod(id);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(id));\r\n    }\r\n    dispatch(toggleIsFollowingProgress(false, id))\r\n};\r\n\r\nexport const follow = (id) => {\r\n    return async (dispatch) => {\r\n        await followUnfollowFlow(dispatch, id, UsersAPI.onFollowClick.bind(UsersAPI), followSuccess)\r\n    };\r\n};\r\n\r\nexport const unfollow = (id) => {\r\n    return async (dispatch) => {\r\n        await followUnfollowFlow(dispatch, id, UsersAPI.onUnFollowClick.bind(UsersAPI), unfollowSuccess)\r\n    };\r\n};\r\n\r\nexport default usersReducer;","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\"API-KEY\": \"6d54c1cb-0079-4662-b13d-27d4ae8cf67d\"}\r\n});\r\n\r\nexport const UsersAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n    },\r\n    onFollowClick(id) {\r\n        return instance.post(`follow/${id}`)\r\n    },\r\n    onUnFollowClick(id) {\r\n        return instance.delete(`follow/${id}`)\r\n    }\r\n};\r\n\r\nexport const AuthAPI = {\r\n    authMe() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}\r\n\r\nexport const ProfileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status/`, {status: status})\r\n    }\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"Friend_friend__2iewF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"News_container__FxKeO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Music_container__2b6QB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Settings_container__2BScX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__Vau-j\",\"pic\":\"Profile_pic__26Yl8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileInfo_content__3OG10\",\"pic\":\"ProfileInfo_pic__i3BJG\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3tsdY\"};","module.exports = __webpack_public_path__ + \"static/media/loading.dec3ae46.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__15CND\"};","import React from \"react\";\r\nimport s from './FormsControls.module.css'\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const FormControl = ({meta:{touched,error},children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={s.formControl + \" \" +(hasError ?s.error:\" \")}>\r\n            <div>\r\n              {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n};\r\nexport const Textarea = (props) => {\r\n    const {input, meta,child, ...restProps}=props;\r\n    return <FormControl {...props}> <textarea {...input} {...restProps}/></FormControl>\r\n};\r\nexport const Input = (props) => {\r\n    const {input, meta,child, ...restProps}=props;\r\n    return <FormControl {...props}> <input {...input} {...restProps}/></FormControl>\r\n};\r\n\r\nexport const  createField = (placeholder,name,validators,component,props={},text=\"\")=>(\r\n    <div>\r\n        <Field name={name} component={component} placeholder={placeholder}\r\n               validate={validators} {...props}/> {text}\r\n    </div>\r\n);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {ProfileAPI} from \"../api/api\";\r\n\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_USER_STATUS = 'SET_USER_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Вжух вжух вжух, мечи воздух рассекают', likeCount: 999},\r\n        {id: 2, message: 'Great, we can go next step!', likeCount: 17},\r\n        {id: 3, message: 'Кто не работает, тот ест.', likeCount: 0},\r\n        {id: 4, message: 'Жить хорошо, а хорошо жить ещё лучше!', likeCount: 666}\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likeCount: 0\r\n            };\r\n            return {...state, posts: [...state.posts, newPost],}\r\n        }\r\n        case DELETE_POST: {\r\n            return {...state, posts: state.posts.filter(p => p.id !== action.postId)}\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case SET_USER_STATUS: {\r\n            return {...state, status: action.status}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setUserStatus = (status) => ({type: SET_USER_STATUS, status});\r\n\r\nexport const getUserProfile = (id) => async (dispatch) => {\r\n    let response = await ProfileAPI.getProfile(id);\r\n    dispatch(setUserProfile(response.data));\r\n};\r\nexport const getUserStatus = (id) => async (dispatch) => {\r\n    let response = await ProfileAPI.getStatus(id);\r\n    dispatch(setUserStatus(response.data));\r\n};\r\nexport const updateUserStatus = (status) => async (dispatch) => {\r\n    let response = await ProfileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setUserStatus(status));\r\n    }\r\n};\r\n\r\nexport default profileReducer;","let initialState={};\r\nconst sidebarReducer = (state = initialState, action)=>{\r\n\r\n\r\n    return state;\r\n};\r\n\r\nexport default sidebarReducer;","import {AuthAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\"\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    data: {userId, email, login, isAuth}\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await AuthAPI.authMe();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n};\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await AuthAPI.login(email, password, rememberMe);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}))\r\n    }\r\n};\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await AuthAPI.logout();\r\n    debugger;\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n};\r\n\r\nexport default authReducer;","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n        dispatch(initializedSuccess())\r\n    })\r\n};\r\n\r\nexport default appReducer;","import profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport ThunkMiddleWare from \"redux-thunk\"\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers(\r\n    {\r\n        profilePage: profileReducer,\r\n        dialogsPage: dialogsReducer,\r\n        sidebar: sidebarReducer,\r\n        usersPage: usersReducer,\r\n        auth: authReducer,\r\n        form: formReducer,\r\n        app: appReducer\r\n    }\r\n);\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(ThunkMiddleWare)));\r\n\r\nwindow.store = store;\r\n\r\nexport default store","import React from 'react';\r\nimport s from './Friend.module.css';\r\n\r\n\r\nconst Friend = (props) => {\r\n    return (\r\n            <div className={s.friend}>\r\n                <div>\r\n                    <img alt=\"avatar\" src='https://www.w3schools.com/w3css/img_avatar3.png'/>\r\n                </div>\r\n                <div>\r\n                    Name\r\n                </div>\r\n\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Friend;","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Friend from \"../Sidebar/Friends/Friend\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/settings\" activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div>\r\n            <div className={s.sidebar}>\r\n                <NavLink to=\"/friends\" activeClassName={s.activeLink}>Friends</NavLink>\r\n                <Friend/><Friend/><Friend/>\r\n            </div>\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './News.module.css';\r\n\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div className={s.container}>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div className={s.container}>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport s from './Settings.module.css';\r\n\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div className={s.container}>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\nimport s from './Sidebar.module.css';\r\nimport Friend from \"./Friends/Friend\";\r\n\r\n\r\nconst Friends = (props) => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                Friends\r\n            </div>\r\n         <div className={s.friendItem}>\r\n             <Friend/>\r\n             <Friend/>\r\n             <Friend/>\r\n             <Friend/>\r\n             <Friend/>\r\n         </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Friends;","import React, {useState,useEffect} from 'react';\r\n\r\n\r\nconst ProfileStatusWithHooks  =(props)=>{\r\n\r\n let [editMode,setEditMode] = useState(false);\r\n let [status,setStatus] = useState(props.status);\r\n\r\n useEffect (()=>{setStatus(props.status)},[props.status]);\r\n\r\n let activateEditMode=()=>{\r\n     setEditMode(true)\r\n };\r\n let onStatusChanged=(e)=>{\r\n     setStatus(e.currentTarget.value);\r\n };\r\n let deActivateEditMode=()=>{\r\n     props.updateUserStatus(status);\r\n     setEditMode(false)\r\n };\r\n        return (\r\n            <div>\r\n                {!editMode ?\r\n                    <div>\r\n                        <span onDoubleClick={activateEditMode}>{status || \"No status\"}</span>\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                        <input onChange={onStatusChanged} onBlur={deActivateEditMode} autoFocus={true} value={status}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n};\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\n\r\n\r\nconst ProfileInfo = ({profile,status,updateUserStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    return <div>\r\n        <div className={s.descriptionBlock}>\r\n            <img alt={'#'} src={profile.photos.large}/>\r\n            <ProfileStatusWithHooks updateUserStatus={updateUserStatus}\r\n                           status={status}/>\r\n            <div>Имя:{profile.fullName}</div>\r\n            <div>Обо мне:{profile.aboutMe}</div>\r\n            <div>Контакты:<a href={'https://' + profile.contacts.vk}>{profile.contacts.vk}</a></div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n};\r\n\r\nexport default ProfileInfo","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n            <div className={s.item}>\r\n                <img alt=\"avatar\" src='https://www.w3schools.com/w3css/img_avatar3.png'/>\r\n                {props.message}\r\n                <div>\r\n                    <span>\r\n                        like {props.likeCount}\r\n                    </span>\r\n                </div>\r\n            </div>\r\n    )\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxlength, required} from \"../../../utils/validators/validators\";\r\n\r\n\r\nconst MyPosts = React.memo((props) => {\r\n    let postsElements = [...props.posts].map(p => <Post message={p.message} likeCount={p.likeCount}/>).reverse();\r\n\r\n    let addPost = (values) => {\r\n        props.addPost(values.newMessageText);\r\n    };\r\n\r\n    return (\r\n        <div className={s.postBlock}>\r\n            <h3> My posts </h3>\r\n            {props.isAuth&&\r\n                <AddProfilePostFormRedux onSubmit={addPost}/>\r\n            }\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nlet maxLength200 = maxlength(200);\r\n\r\nlet ProfilePostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name=\"newMessageText\"\r\n                       component={Textarea} placeholder={\"Enter your text\"}\r\n                       validate={[required, maxLength200]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\nconst AddProfilePostFormRedux = reduxForm({form: \"ProfileAddPostForm\"})(ProfilePostForm);\r\n\r\n\r\nexport default MyPosts;","import {addPostActionCreator} from \"../../../Redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state)=>{\r\n    return {\r\n        newPostText:state.profilePage.newPostText,\r\n        posts:state.profilePage.posts,\r\n        isAuth:state.auth.isAuth\r\n    }\r\n};\r\nlet mapDispatchToProps = (dispatch)=>{\r\n    return {\r\n        addPost:(newPostText)=>{\r\n            dispatch(addPostActionCreator(newPostText));\r\n        },\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n    return <div className={s.content}>\r\n        <ProfileInfo profile={props.profile}\r\n                     status={props.status}\r\n                     updateUserStatus={props.updateUserStatus}\r\n        />\r\n        <MyPostsContainer />\r\n    </div>\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {getUserProfile, getUserStatus, updateUserStatus} from \"../../Redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({status: this.props.status})\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return <Profile {...this.props}/>\r\n\r\n    };\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus}),\r\n    withRouter,\r\n)(ProfileContainer)\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\n\r\n\r\n\r\nconst Header = (props) => {\r\n\r\n    return <header className={s.header}>\r\n        <img alt=\"logo\" src='https://www.vetter.fi/wp-content/uploads/2019/05/logo-ex-3.png'/>\r\n\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth\r\n                ? <div>{props.login} - <button onClick={props.logout}>Log out</button> </div>\r\n                : <><NavLink to={'/login'}>Login</NavLink><Redirect to={\"/login\"}/></>\r\n            }\r\n        </div>\r\n\r\n    </header>;\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {logout} from \"../../Redux/auth-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {maxlength, required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../Redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport s from '../common/FormsControls/FormsControls.module.css'\r\n\r\nlet maxLength = maxlength(20);\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField('Email', 'email', [required, maxLength], Input)}\r\n            {createField('Password', 'password', [required, maxLength], Input, {type: \"password\"})}\r\n            {createField(null, 'rememberMe', null, Input, {type: 'checkbox'}, \"remember me\")}\r\n            {error && <div className={s.formSummaryError}>\r\n                {error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    };\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n};\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default connect(mapStateToProps, {login})(Login)","import React from 'react';\nimport './App.css';\nimport Navbar from \"./components/Navbar/Navbar\";\nimport {Route, withRouter} from \"react-router-dom\";\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport Friends from \"./components/Sidebar/Sidebar\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport {initializeApp} from \"./Redux/app-reducer\";\nconst UsersContainer = React.lazy(() => import(\"./components/Users/UsersContainer\"));\nconst Dialogs = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"));\n\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    };\n\n    render() {\n        if (!this.props.initialized){\n            return <Preloader/>\n        }\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <React.Suspense fallback={<Preloader/>}>\n                    <Route path='/dialogs' render={() => <Dialogs/>}/>\n                    <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\n                    <Route path='/news' component={News}/>\n                    <Route path='/music' component={Music}/>\n                    <Route path='/users' component={UsersContainer}/>\n                    <Route path='/settings' component={Settings}/>\n                    <Route path='/friends' component={Friends}/>\n                    <Route path='/login' component={Login}/>\n                    </React.Suspense>\n                </div>\n\n            </div>\n\n        );\n    }\n}\n\nconst mapStateToProps =(state)=>({\n    initialized: state.app.initialized,\n\n});\n\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);","import './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./Redux/redux-store\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","\r\n\r\n\r\nexport const required =value=>{\r\n    if (value){\r\n        return undefined\r\n    };\r\n    return  \"field is required\"\r\n};\r\n\r\nexport const maxlength =(maxLength)=>(value)=>{\r\n    if(value.length>maxLength) {return `Max length is ${maxLength} symbols`;}\r\n    return undefined\r\n}","import loading from \"../../../assets/images/loading.svg\";\r\nimport React from \"react\";\r\n\r\nlet Preloader = (props) => {\r\n    return <div>\r\n        <img alt={'#'} src={loading}/>\r\n    </div>\r\n};\r\n\r\nexport default Preloader","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2kHZb\",\"error\":\"FormsControls_error__3oTPu\",\"formSummaryError\":\"FormsControls_formSummaryError__3nJyN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPosts_item__1lop8\",\"postBlock\":\"MyPosts_postBlock__3_o5z\",\"posts\":\"MyPosts_posts__3bQmu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__WkEFg\",\"loginBlock\":\"Header_loginBlock__-nMEC\"};"],"sourceRoot":""}